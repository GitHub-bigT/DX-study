Texture2D shaderTexture;
SamplerState SampleType;

cbuffer LightBuffer
{
	float4 diffuseColor;
	float3 lightDirection;
	float padding;
};

struct PixelInputType
{
	float4 position : SV_POSITION;
	float4 color : COLOR;
	float2 tex		: TEXCOORD;
	float3 normal : NORMAL;
};

float4 TexturePixelShader(PixelInputType input) : SV_TARGET
{
	//渲染方程：纹理颜色 * 漫反射颜色 * 光照强度因子
	float4 textureColor;
	float3 lightDir;
	float lightIntensity;
	float4 color;

	textureColor = shaderTexture.Sample(SampleType, input.tex);
	lightDir = -lightDirection;
	lightIntensity = saturate(dot(input.normal, lightDir));//lightIntensity:0~1
	color = saturate(diffuseColor * lightIntensity);
	color = color * textureColor;

	//color = input.color;

    return color;
}